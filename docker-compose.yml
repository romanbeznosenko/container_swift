services:
  mongodb:
    container_name: db_mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: mydb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/mongo_init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  api:
    container_name: swift_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mongodb://root:rootpassword@mongodb:27017/mydb?authSource=admin
      - DATABASE_TYPE=mongodb
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
    networks:
      - app-network
    command: ./wait-for-mongodb.sh mongodb python start.py

  frontend:
    container_name: swift_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
      - upload-service
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_UPLOAD_API_URL=http://localhost:8001

  upload-service:
    container_name: swift_upload_service
    build:
      context: ./upload-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - SWIFT_API_URL=http://api:8000
      - PORT=8001
      - API_TIMEOUT=30
      - LOG_LEVEL=INFO
    depends_on:
      - api
    volumes:
      - ./upload-service:/app
      - upload_data:/app/uploads
    networks:
      - app-network

volumes:
  mongodb_data:
  upload_data:

networks:
  app-network:
    driver: bridge